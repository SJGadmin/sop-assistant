generator client {
  provider = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions = [vector]
}

// Authentication models removed - app is now open access

model Chat {
  id        String    @id @default(cuid())
  title     String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  messages Message[]

  @@map("chats")
}

model Message {
  id         String      @id @default(cuid())
  chatId     String
  role       MessageRole
  content    String      @db.Text
  tokensUsed Int         @default(0)
  createdAt  DateTime    @default(now())

  chat Chat @relation(fields: [chatId], references: [id], onDelete: Cascade)

  @@index([chatId, createdAt])
  @@map("messages")
}

model Document {
  id        String   @id @default(cuid())
  sliteId   String   @unique
  title     String
  updatedAt DateTime
  hash      String
  createdAt DateTime @default(now())

  chunks Chunk[]

  @@index([sliteId])
  @@index([updatedAt])
  @@map("documents")
}

model Chunk {
  id         String                        @id @default(cuid())
  documentId String
  idx        Int
  text       String                        @db.Text
  embedding  Unsupported("vector(1536)")?
  tokens     Int
  createdAt  DateTime                      @default(now())

  document Document @relation(fields: [documentId], references: [id], onDelete: Cascade)

  @@index([documentId])
  @@map("chunks")
}

// Rate limiting removed for simplicity

enum MessageRole {
  user
  assistant
  system
  tool
}